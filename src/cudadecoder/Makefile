all:

EXTRA_CXXFLAGS = -Wno-sign-compare
include ../kaldi.mk

ifeq ($(CUDA), true)
# Make sure we have CUDA_ARCH from kaldi.mk,
ifndef CUDA_ARCH
  $(error CUDA_ARCH is undefined, run 'src/configure')
endif

TESTFILES =

OBJFILES += batched-threaded-cuda-decoder.o decodable-cumatrix.o
ifeq ($(CUDA), true)
  OBJFILES += cuda-decoder.o cuda-decoder-kernels.o cuda-decoder-utils.o cuda-fst.o
endif

LDFLAGS += $(CUDA_LDFLAGS)
LDLIBS += $(CUDA_LDLIBS)

LIBNAME = kaldi-cuda-decoder

ADDLIBS = ../cudamatrix/kaldi-cudamatrix.a ../cudadecoder/kaldi-cuda-decoder.a ../base/kaldi-base.a ../matrix/kaldi-matrix.a \
					../lat/kaldi-lat.a ../util/kaldi-util.a ../matrix/kaldi-matrix.a ../gmm/kaldi-gmm.a \
					../fstext/kaldi-fstext.a ../hmm/kaldi-hmm.a ../gmm/kaldi-gmm.a ../transform/kaldi-transform.a \
					../tree/kaldi-tree.a ../online2/kaldi-online2.a ../nnet3/kaldi-nnet3.a  \

# Implicit rule for kernel compilation,
%.o : %.cu
	$(CUDATKDIR)/bin/nvcc -c $< -o $@ $(CUDA_INCLUDE) $(CUDA_FLAGS) $(CUDA_ARCH) -I../ -I$(OPENFSTINC)

include ../makefiles/default_rules.mk

endif
